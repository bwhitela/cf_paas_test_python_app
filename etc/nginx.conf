worker_processes 1;
daemon off;
worker_rlimit_nofile 30000;

error_log <%= ENV["APP_ROOT"] %>/../logs/nginx-error.log;

events {
    worker_connections 20000;
}

http {
    include mime.types;
    default_type application/octet-stream;

    log_format cloudfoundry '$remote_addr [$time_local] $request_method $request_uri '
                            '$status $body_bytes_sent $pipe $request_time ';
    access_log <%= ENV["APP_ROOT"] %>/../logs/nginx-access.log cloudfoundry;
    # Turn off access logging in high volume scenarios:
    # access_log off;

    sendfile on;
    keepalive_timeout  60;
    keepalive_requests 1000000;

    upstream wsgi_app {
        ip_hash;
        server unix://<%= ENV["APP_ROOT"] %>/var/run/uwsgi.sock;
    }

    server {
        listen <%= ENV["PORT"] %> backlog=10000;
        server_name localhost;

        #ssl                  on;
        #ssl_certificate      <%= ENV["APP_ROOT"] %>/ssl/server.crt;
        #ssl_certificate_key  <%= ENV["APP_ROOT"] %>/ssl/server.key.nopasswd;

        #ssl_verify_client    optional;
        #ssl_client_certificate <%= ENV["APP_ROOT"] %>/ssl/ca.crt;
        #ssl_verify_depth 10;

        #ssl_session_timeout  5m;

        #ssl_protocols  TLSv1;
        #ssl_ciphers  RC4-SHA:AES256-SHA:AES128-SHA:HIGH:!eNULL:!aNULL:!MD5:!ADH:!EXP;
        #ssl_prefer_server_ciphers   on;


        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }

        location /public {
          root <%= ENV["APP_ROOT"] %>/public;
          index index.html index.htm Default.htm;
        }

        #location / {
        #    if ($ssl_client_verify !~ SUCCESS) {
        #        return 400;
        #    }
        #    uwsgi_pass      wsgi_app;
        #    include         uwsgi_params;
        #    #include         /etc/nginx/uwsgi_params;
        #}

        location / {
            uwsgi_pass      wsgi_app;
            include         uwsgi_params;
            #include         /etc/nginx/uwsgi_params;
        }


  }
}
